package homepage;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.is;
import static org.junit.jupiter.api.Assertions.assertTrue;

import java.util.List;

import org.junit.jupiter.api.Test;

import base.BaseTest;
import pages.CarrinhoPage;
import pages.LoginPage;
import pages.ModalProdutoPage;
import pages.ProdutoPage;


public class HomePageTests extends BaseTest{
	
	@Test
	public void testContarProdutos_oitoProdutosDiferentes() {
		carregarPaginaInicial();
		assertThat(homePage.contarProdutos(), is(8));
		
	}
	@Test
	public void testValidarCarrinhoZerado_ZeroItensNoCarrinho() {
		int produtosNoCarrinho = homePage.obterQuantidadeProdutosNoCarrinho();
		assertThat(produtosNoCarrinho, is (0));
		
	}
	ProdutoPage produtoPage;
	String nomeProduto_ProdutoPage;
	@Test
	public void testValidarDetalhesDoProduto_DescricaoEValorIguais() {
		int indice = 0;
		String nomeProduto_HomePage = homePage.obterNomeProduto(indice);
		String precoProduto_HomePage = homePage.obterPrecoProduto(indice);
		
		System.out.println(nomeProduto_HomePage);
		System.out.println(precoProduto_HomePage);
		
	 produtoPage = homePage.clicarProduto(indice); 
		
		nomeProduto_ProdutoPage = produtoPage.obterNomeProduto();
		String precoProduto_ProdutoPage = produtoPage.obterPrecoProduto();

		System.out.println(nomeProduto_ProdutoPage);
		System.out.println(precoProduto_ProdutoPage);
		
		assertThat(nomeProduto_HomePage.toUpperCase(), is(nomeProduto_ProdutoPage.toUpperCase()));
		assertThat(precoProduto_HomePage, is (precoProduto_ProdutoPage));
		
		
	}
	LoginPage loginPage;
	@Test
	public void testLogibComSucesso_UsuarioLogado() {
		//Clicar no botão Sign In na home page
	   loginPage = homePage.clicarBotaoSignIn();
		
		//Preencher usuario e senha
		loginPage.preencherEmail("sharkinhojiu@teste.com");
		loginPage.preencherPassword("vgbs1");
		
		
		//Clicar no botão Sign In para logar
		loginPage.clicarBotaoSignIn();
		
		
		//Validar se o usuário está logado de fato
		assertThat(homePage.estaLogado("Vinicius gabriel"), is(true));
		
		carregarPaginaInicial();
		
		}
	ModalProdutoPage modalProdutoPage;
	@Test
	public void incluirProdutoNoCarrinho_ProdutoIcluidoComSucesso() {
		
		String tamanhoProduto = "M";
		String corProduto = "Black";
		int quantidadeProduto = 2;
		
		//--pré condição
		//usuario logado
		if (!homePage.estaLogado("Vinicius gabriel")) {
			testLogibComSucesso_UsuarioLogado();
			}
		//--teste
		//Seleconando produto
			testValidarDetalhesDoProduto_DescricaoEValorIguais();
		
			//Selecionar o tamanho
			List<String> listaOpcoes = produtoPage.obterOpcoesSelecionadas();
			
			System.out.println(listaOpcoes.get(0));
			System.out.println("Tamanho da Lista: " + listaOpcoes.size());
			
			produtoPage.selecionarOpcaoDropDown(tamanhoProduto);
			
			listaOpcoes = produtoPage.obterOpcoesSelecionadas();
			
			System.out.println(listaOpcoes.get(0));
			System.out.println("Tamanho da Lista: " + listaOpcoes.size());
			
			//selecionar cor
			
			produtoPage.selecionarCorPreta();
			
			//selecionar quantidade
			produtoPage.alterarQuantidade(quantidadeProduto);
			//adicionar no carrinho
			modalProdutoPage = produtoPage.clicarBotaoAddToCart();
			
			//Validações
			
			assertTrue(modalProdutoPage.obterMensagemProdutoAdicionado().endsWith("Product successfully added to your shopping cart"));
			
			assertThat(modalProdutoPage.obterDescricaoProduto().toUpperCase(), is(nomeProduto_ProdutoPage.toUpperCase()));
			
			String precoProdutoString = modalProdutoPage.obterPrecoProduto();
			precoProdutoString = precoProdutoString.replace("$", "");
			Double precoProduto = Double.parseDouble(precoProdutoString);
			
			assertThat(modalProdutoPage.obterTamanhoProduto(), is(tamanhoProduto));
			assertThat(modalProdutoPage.obterCorProduto(), is(corProduto));
			assertThat(modalProdutoPage.obterQuantidadeProduto(), is(Integer.toString(quantidadeProduto)));
	
			String subTotalString = modalProdutoPage.obterSubTotal();
			subTotalString = subTotalString.replace("$", "");
			Double subTotal = Double.parseDouble(subTotalString);
			
			Double subTotalCalculado = quantidadeProduto * precoProduto;
			
			assertThat(subTotal, is (subTotalCalculado));
			
	}
	@Test
	public void IrParaCarrinho_InformacoesPersistidas() {
		//--Pré-condição
		//Produto incluido na tela ModalProdutoPage
		incluirProdutoNoCarrinho_ProdutoIcluidoComSucesso();
		
		//CarrinhoPage carrinhoPage = modalProdutoPage.clicarBotaoProceedToCheckout();
		
		//Teste
		
		//Validar todos elementos da tela
		System.out.println("***TELA DO CARRINHO***");
		
		//System.out.println(carrinhoPage.obter_nomeProduto());
		//System.out.println(carrinhoPage.obter_precoProduto());
		//System.out.println(carrinhoPage.obter_tamanhoProduto());
		//System.out.println(carrinhoPage.obter_corProduto());
		//System.out.println(carrinhoPage.obter_input_quantidadeProduto());
		//System.out.println(carrinhoPage.obter_subtotalProduto());
		
	}
	
	
}
